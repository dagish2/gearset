<apex:page controller="WeworkEngine" standardStylesheets="false"
    sidebar="false" showHeader="false" cache="false">
    <c:GlobalResources local="{!$CurrentPage.parameters.local}"
        Vendor_CSS="bootstrap/css/bootstrap-toggle.min.css,bootstrap/js/bootstrap-toggle.min.js" 
        Vendor_JS="jquery/moment.min.js,angu-complete/angucomplete-ie8.js,angu-complete/angular-touch.min.js,angu-complete/angucomplete-ie8.css,jquery/xdate.js"
        Application_JS="error-manager.js,angucomplete.js,autocomplete.js,bookTours.js,salesforce.js,common-controls.js"
        Application_CSS="applicationCSS.css,autocomplete.css" />
    <apex:includeScript value="/support/console/38.0/integration.js"/>
    <script type="text/javascript">
        sforce.console.setTabTitle('Manage Tours');
    </script>
    <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Manage Tours</title>
        <script>
            (function(factory) {
                if (typeof define === 'function' && define.amd) {
                  // AMD. Register as an anonymous module.
                  define(['jquery'], factory);
                } else if (typeof exports === 'object') {
                    // Node/CommonJS
                    factory(require('jquery'));
                } else {
                  // Browser globals
                  factory(jQuery);
                }
            })(function($) {

              // enhance all ajax requests with our retry API
              $.ajaxPrefilter(function(options, originalOptions, jqXHR) {
                jqXHR.retry = function(opts) {
                  if(opts.timeout) {
                    this.timeout = opts.timeout;
                  }
                  if (opts.statusCodes) {
                    this.statusCodes = opts.statusCodes;
                  }
                  return this.pipe(null, pipeFailRetry(this, opts));
                };
              });

              // generates a fail pipe function that will retry `jqXHR` `times` more times
              function pipeFailRetry(jqXHR, opts) {
                var times = opts.times;
                var timeout = jqXHR.timeout;

                // takes failure data as input, returns a new deferred
                return function(input, status, msg) {
                  var ajaxOptions = this;
                  var output = new $.Deferred();
                  var retryAfter = jqXHR.getResponseHeader('Retry-After');

                  // whenever we do make this request, pipe its output to our deferred
                  function nextRequest() {
                    $.ajax(ajaxOptions)
                      .retry({times: times - 1, timeout: opts.timeout, statusCodes: opts.statusCodes})
                      .pipe(output.resolve, output.reject);
                  }

                  if (times > 1 && (!jqXHR.statusCodes || $.inArray(input.status, jqXHR.statusCodes) > -1)) {
                    if (retryAfter) {
                      // it must be a date
                      if (isNaN(retryAfter)) {
                        timeout = new Date(retryAfter).getTime() - $.now();
                      // its a number in seconds
                      } else {
                        timeout = parseInt(retryAfter, 10) * 1000;
                      }
                      // ensure timeout is a positive number
                      if (isNaN(timeout) || timeout < 0) {
                        timeout = jqXHR.timeout;
                      }
                    }

                    if (timeout !== undefined){
                      setTimeout(nextRequest, timeout);
                    } else {
                      nextRequest();
                    }
                  } else {
                    // no times left, reject our deferred with the current arguments
                    output.rejectWith(this, arguments);
                  }
                  return output;
                };
              }
            });
        </script>
    </head>
    <body>
    <div id="spinnerContainer"></div>
        <div id="wrapper" class="scroll-window" ng-app="bookToursApp" ng-controller="bookToursCtrl">
           <div class="container-fluid" style="margin-top: 25px">
               <book-tours>
               </book-tours>
           </div>
        </div>
    </body>
</apex:page>